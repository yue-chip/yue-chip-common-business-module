plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'application'
    id 'org.graalvm.buildtools.native' version "${nativeVersion}"
}
archivesBaseName = 'yue-chip-upms-serve'
apply plugin: 'org.springframework.boot'
apply from: this.rootProject.file('javaLibrary.gradle')
apply from: this.rootProject.file('javaLibraryMvnPublish.gradle')
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testCompileOnly {
        extendsFrom testAnnotationProcessor
    }
}
mainClassName = 'com.yue.chip.upms.ApplicationUpmsServe'
graalvmNative {
    binaries {
        main {
            verbose = true
            fallback = true
            buildArgs.add('-H:+ReportExceptionStackTraces')
            buildArgs.add('--no-fallback')
            buildArgs.add('--report-unsupported-elements-at-runtime')
            buildArgs.add('--allow-incomplete-classpath')
            buildArgs.add('--initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,java.net.Inet4Address')
            buildArgs.add('--trace-class-initialization=org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,java.net.Inet4Address')
            buildArgs.add('--trace-object-instantiation=java.net.Inet4Address')
        }
    }
}
bootJar {
    enabled true
}
dependencies {
    api project(':common')
    api project(':interface-expose')
    api project(':authentication')
    api 'yue.chip:yue-chip-serve-starter'
    api 'yue.chip:yue-chip-business-starter'
    api 'yue.chip:yue-chip-business-starter'
    api 'yue.chip:yue-chip-security'
//    api "yue.chip:yue-chip-oauth2-resource-serve"
    implementation 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor"org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testCompileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

